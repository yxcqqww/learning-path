/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 项目名称：admin.guanaihui.com
 2. 页面名称：shop/shops(机构->机构列表)
 3. 作者：赵华刚(zhaohuagang@guanaihui.com)
 4. 备注：
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
function ShopsController() {
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
     继承于Controller基类
     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    Controller.call(this);
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    将当前地址记忆到cookie中，供路径导航中的机构管理用
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.memoryCategory();
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    实例化dialog
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.instanceDialog();
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    实例化条理化表格
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    if ($(".data-panel table thead .handle").size() > 0) this.instanceMethodizeTable();
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    绑定事件
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.bind();
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    点击路径导航中的机构管理链接
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.backCompanyList();
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    两级联动插件调用
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    //this.instanceCascade();
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    确认查询按钮
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    this.save();
};
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
将当前地址记忆到cookie中，供路径导航中的机构管理用
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ShopsController.prototype.memoryCategory = function() {
    $.cookie(this.cookieKeyConf.shop.company.category, window.location.href, {
        expires: this.cookieExpires,
        path: "/",
        domain: this.cookieDomain
    });
};

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
实例化dialog
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ShopsController.prototype.instanceDialog = function() {
    var classSelf = this;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    所有dialog句柄点击弹出目标页面
     -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $(".dialog-handle").click(function() {
        var id = $(this).attr("data-dialog-id");
        var dialogHandle = this;
        classSelf.dialog({
            "id": id,
            "url": $(this).attr("data-href"),
            "dimension": "lg"
        });
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        品牌dialog实例化后要实例化品牌面板
         -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        $("#modal-brand").on("loaded.bs.modal", function(e) {
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            判断是新增还是编辑按钮来给表单的action赋值
             -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            var apiUrl = "";
            if ($(dialogHandle).hasClass("add")) apiUrl = classSelf.apiUrl.shop.brand.add;
            else if ($(dialogHandle).hasClass("brand")) apiUrl = classSelf.apiUrl.shop.brand.edit;
            $("#" + id + " form").attr("action", apiUrl);
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            再实例化品牌类
             -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            require([classSelf.appStaticPrefix + "/shop/brand.min.js"], function() {
                new BrandController({
                    brandPanel: $("#" + id),
                    parentClass: classSelf
                });
            });
        });
    });
};
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
事件绑定
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ShopsController.prototype.bind = function() {
    var classSelf = this;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    下线所选按钮
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $(".data-panel .assistant .tools .offline").click(function() {
        classSelf.offline($(".data-panel table input[name='methodize-table-checked-set']").val());
    });
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    每行里面下线及转待上线按钮
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $(".data-panel table tbody tr").each(function() {
        var id = $(this).attr("data-id");
        $(this).find(".offline").click(function() {
            classSelf.offline(id);
        });
        $(this).find(".transfer").click(function() {
            classSelf.transfer(id);
        });
    });
};
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
下线
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ShopsController.prototype.offline = function(id) {
    if (!id) {
        this.tips("请先选择机构！", 2);
        return false;
    }
    var classSelf = this;
    classSelf.confirm({
        "content": "您确定要下线选中的机构吗？",
        "confirmInterface": function() {
            classSelf.request(classSelf.apiUrl.shop.offline, {
                "id": id,
                "hasChecked": false
            }, {
                process: function(data) {
                    if (!data.result) {
                        classSelf.tips("下线机构成功！", 2, function() {
                            window.location.reload();
                        }); 
                    }
                    //如果校验不成功，这里需要弹出框需要用户确认是否需要下线
                    if (data.result && data.result.toString() === "1001") {
                        classSelf.confirm({
                            "content": "该机构属于营销推荐机构，如果下线会对展示造成影响，您确认要下线吗?",
                            "confirmInterface": function() {
                                classSelf.request(classSelf.apiUrl.shop.offline, {
                                    "id": id,
                                    "hasChecked": true
                                }, {
                                    process: function() {
                                        classSelf.tips("下线机构成功！", 2, function() {
                                            window.location.reload();
                                        });
                                    }
                                });
                            }
                        });
                    }
                },
                onExceptionInterface: function(data) {

                }
            });
        }
    });

};
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
机构转待上线处理
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ShopsController.prototype.transfer = function(id) {
    var classSelf = this;
    if (!id) {
        classSelf.tips("请先选择机构！", 2);
        return false;
    }
    this.confirm({
        "content": "您确定要将选中的门店转为待上线状态吗？",
        "confirmInterface": function() {
            classSelf.request(classSelf.apiUrl.shop.transfer, {
                "id": id
            }, {
                process: function() {
                    classSelf.tips("机构转待上线成功！", 2, function() {
                        window.location.reload();
                    });
                }
            });
        }
    });
};
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
类的初始化
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
实例化省市两级联动插件
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
//ShopsController.prototype.instanceCascade = function() {
//    var classSelf = this ;
//    require([classSelf.utilStaticPrefix + "/cascadeSelect/jquery.cascadeselect.min.js"], function(){
//            var categoryApiUrl = ($("#isTjt").val() === "true") ? classSelf.apiUrl.shop.categories.tjtList : classSelf.apiUrl.shop.categories.list ;
//            var categoryDefaultVals = new Array ;
//            var categoryId = $("input[name='queryCIds']").val() ;
//            if(categoryId) categoryId = $.trim(categoryId);
//            if(categoryId) categoryDefaultVals = categoryId.split(",") ;
//            $('.J-select').cascadeSelect({
//                level : 2 ,
//                url : categoryApiUrl,
//                crossDomain : true ,
//                jsonpCallback : "getCategory" ,
//                nameAttrs : ["queryCIdOne","queryCIdTwo"] ,
//                classAttrs : ["form-control input-sm", "form-control input-sm"] ,
//                defaultVals : categoryDefaultVals ,
//                dataKey : "cateGoryList"  ,
//                onInitInterface : function(){
//                    $(".J-select select[name='queryCIdOne']").attr("placeholder", "选择一级分类") ;
//                    $(".J-select select[name='queryCIdTwo']").attr("placeholder", "选择二级分类") ;
//                }
//            }) ;
//
//    }) ;
//} ;
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
后台传select ID
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ShopsController.prototype.save = function() {
    var classSelf = this ;
    require([classSelf.utilStaticPrefix + "/jquery.asyncsubmit.min.js"], function(){
        $('.assistant').find("form").asyncsubmit({
            utilStaticPrefix : classSelf.utilStaticPrefix ,
            dataType : classSelf.apiDataType,
            data:function(){
                var data={};
                for(var i=0;i<$("select[name='primary'] option").length;i++){
                    if($("select[name='primary'] option").eq(i).prop('selected')){
                        queryCIdOne=$("select[name='primary'] option").eq(i).val();
                        data.queryCIdOne=queryCIdOne;
                        for(var j=0;j<$("select[name='secondary'] option").length;j++){
                            if($("select[name='secondary'] option").eq(j).prop('selected')){
                                queryCIdTwo=$("select[name='secondary'] option").eq(j).val();
                                data.queryCIdTwo=queryCIdTwo;
                            }
                        }
                    }
                }
                return data;


            },
            onSavingInterface : function() {
                classSelf.tips("正在进行处理，请稍等...") ;
            } ,
            onErrorInterface : function() {
                classSelf.tips("请求失败，请检查您的接口！", 2) ;
            } ,
            onSuccessInterface : function(result) {
                classSelf.tips("品牌信息保存成功！", 2, function(){
                    window.location.reload() ;
                }) ;
            } ,
            onExceptionInterface : function(message) {
                classSelf.tips("<span class=\"text-danger\">" + message + "</span>", 5) ;
            }
        }) ;
    }) ;
} ;
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
从shopIds和productTagIds这两个隐藏域里面去分析，哪些select的选项是要被selected的
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
ShopsController.prototype.initSelectOptions = function() {
    /*var tagIds = $("input[name='tagIds']").val() ;
    var selectedTagsArray = new Array ;
    if(tagIds) selectedTagsArray = tagIds.split(",") ;
    $("select[name='tags'] option").each(function(){
        if($.inArray($(this).attr("value"), selectedTagsArray) !== -1) $(this).attr("selected", "selected") ;
    }) ;*/
    var queryCIdOne=0;


} ;

$(document).ready(function() {
    new ShopsController;
});
