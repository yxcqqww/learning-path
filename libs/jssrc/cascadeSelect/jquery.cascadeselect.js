/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 插件名称：cascadeselect
 2. 插件描述：级联选择插件
 3. 版本：1.0
 4. 对其他插件的依赖：无
 5. 作者：俞晓晨(yuxiaochen@guanaihui.com)
 6. 未尽事宜：无
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

(function($) {
    $.fn.cascadeSelect = function(options) {
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        配置属性的扩展
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        var opts = $.extend({}, $.fn.cascadeSelect.defaults, options);

        //设置请求类型
        var apiDataType = opts.crossDomain ? "jsonp" : "json";
        var requestType = opts.crossDomain ? "GET" : opts.requestType;
        var jsonpCallback = opts.jsonpCallback;


        if (!opts.url) {
            console.error("url is null");
            return;
        }

        return this.each(function() {
            var _this = $(this);

            //获取数据
            if (typeof(opts.url) == "string") {
                $.ajax({
                    url: opts.url,
                    type: requestType,
                    dataType: apiDataType,
                    data: requestType,
                    jsonpCallback: jsonpCallback,
                    success: function(data) {
                        if (data.code === 200) {
                            $.fn.cascadeSelect.init(_this, opts, data.result);
                        } else {
                            console.error("ajax callBack error");
                        }
                    },
                    error: function(e) {
                        console.error("ajax error");
                    }
                })
            } else {
                $.fn.cascadeSelect.init(_this, opts, $.parseJSON(opts.url));
            }
        });
    }


    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    初始化，绑定数据，绑定事件
    1.$container:select容器
    2.opt:配置信息
    3.data:数据源
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeSelect.init = function($container, opts, data) {
        var name = className = defaultval = "";
        var select_data = data[opts.dataKey];
        var onInitInterface = (opts === null || opts.onInitInterface === null || opts.onInitInterface === undefined) ? null : opts.onInitInterface;

        //先生成第一个select
        if (opts.nameAttrs != null) {
            name = opts.nameAttrs[0];
        }

        if (opts.classAttrs) {
            className = opts.classAttrs[0];
        }

        if (opts.defaultVals) {
            defaultval = opts.defaultVals[0];
        }

        $container.append($.fn.cascadeSelect.genSelect(name, className, defaultval, select_data, opts));

        //然后生成其他的select
        for (var i = 1; i < opts.level; i++) {
            if (opts.nameAttrs != null && opts.nameAttrs.length >= i) {
                name = opts.nameAttrs[i];
            }
            if (opts.classAttrs != null && opts.classAttrs.length >= i) {
                className = opts.classAttrs[i];
            }
            if (opts.defaultVals != null && opts.defaultVals.length >= i) {
                defaultval = opts.defaultVals[i];
                var $parentSelect = $container.find("select:eq(" + (i - 1) + ")");
                select_data = $parentSelect.find("option:selected").data("options");
            } else {
                select_data = null;
            }

            $container.append($.fn.cascadeSelect.genSelect(name, className, defaultval, select_data, opts));
        }

        //select全部生成后，执行自定义函数
        if (onInitInterface) onInitInterface();


        //绑定事件
        $container.find("select").each(function(index, el) {
            if (index < opts.level - 1) {
                $.fn.cascadeSelect.bindEvents($container, $(el), index + 1, opts);
            }
        });


    }

    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    生成select dom 元素
    1. name:name 属性
    2. className: css className
    3. defaultval:默认值
    4. data:数据源
    5. opts:配置项
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeSelect.genSelect = function(name, className, defaultval, data, opts) {
        var $emptySelect = $("<select></select>");

        if (!opts.isShowFirst) {
            $emptySelect.append("<option value=''>请选择</option>");
        }

        //先设置ClassName和name属性
        $emptySelect.addClass(className).attr("name", name);

        //再根据数据生成option
        if (data != undefined && data.length > 0) {
            $.each(data, function(i, item) {
                var keys = Object.keys(item);
                var $tmp = $("<option></option>").data("options", item[opts.subdataKey])
                    .attr("data-name", item[keys[0]])
                    .val(keys[0])
                    .html(item[keys[0]]);
                $tmp.appendTo($emptySelect);
            })
        }

        //如存在默认值
        //先通过Name去判断
        var $selectOption = $emptySelect.find("option[data-name='" + defaultval + "']");
        if ($selectOption.length > 0) {
            $emptySelect.val($selectOption.val());
        } else {
            $emptySelect.val(defaultval);
        }

        return $emptySelect;
    }


    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    绑定事件
    1. $container:容器
    2. $select: select元素
    3. level:级数
    4. opts:配置项
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeSelect.bindEvents = function($container, $select, level, opts) {
        $select.on("change", function() {
            var _this = $(this);
            var $nextSelect = $container.find("select:eq(" + level + ")"); //直接下级Select

            //清空下级select option
            $container.find("select").each(function(index, el) {
                if (index + 1 > level) {
                    if (!opts.isShowFirst) {
                        $(el).empty().append("<option value=''>请选择</option>");
                    }
                }
            })

            var data = _this.find("option:selected").data("options");

            if (data != undefined && data.length > 0) {
                $.each(data, function(i, item) {
                    var keys = Object.keys(item);
                    var $tmp = $("<option></option>").data("options", item[opts.subdataKey])
                        .attr("data-name", item[keys[0]])
                        .val(keys[0])
                        .html(item[keys[0]]);
                    $tmp.appendTo($nextSelect);
                })
            } else {
                if (opts.nodata === "none") {
                    $nextSelect.hide();
                }
            }
        })
    }


    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    areaselect 插件默认配置
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeSelect.defaults = {
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        级联控件的级数,默认为三级
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        level: 3,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        区域数据json文件路径,同时也可以扩展为支持json数据格式
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        url: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        默认值设置,类型为数组:["北京市","北京市","东城区"]
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        defaultVals: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        无数据状态，默认为null。nodata="none" 表示当子集无数据时，隐藏子集select,
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        nodata: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        必选项,默认为false。 当为true表示是否切换数据时是否默认显示子集的第一项
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        isShowFirst: false,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        接口是否跨域，这直接决定了接口的返回格式是json还是jsonp。默认为false
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        crossDomain: false,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        请求类型，可以是：GET | POST，如果crossDomain="jsonp"，那请求肯定是GET类型
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        requestType: 'GET',
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        如若是jsonp 请求，可以指定callBackFunction Name，默认为callBack
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        jsonpCallback: "callback",
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        支持对于表单提交的情况,可能需要设置<select></select>的name 属性。类型为array;["province","city","district"]
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        nameAttrs: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        支持给select元素设置指定的class,类型为array:["province","city","district"]
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        classAttrs: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        数据源Key,默认为areaList
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        dataKey: "areaList",
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        子数据源key,默认为childrens
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        subdataKey: "childrens",
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        初始完成后的自定义执行函数
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        onInitInterface: null
    }
})(jQuery)
