/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 1. 插件名称：areaselect
 2. 插件描述：区域三级联动选择插件
 3. 版本：1.0
 4. 对其他插件的依赖：无
 5. 作者：俞晓晨(yuxiaochen@guanaihui.com)
 6. 未尽事宜：无
 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

(function($) {

    $.fn.areaSelect = function(options) {
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        配置属性的扩展
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        var opts = $.extend({}, $.fn.areaSelect.defaults, options);

        //设置请求类型
        var apiDataType = opts.crossDomain ? "jsonp" : "json";
        var requestType = opts.crossDomain ? "GET" : opts.requestType;
        var jsonpCallback = opts.jsonpCallback;


        if (!opts.url) {
            console.error("url is null");
            return;
        }

        return this.each(function() {
            var _this = $(this);

            if (_this.find("select").length === 0) {
                console.error("no select html element finded");
                return;
            };

            //获取数据
            if (typeof(opts.url) == "string") {
                $.ajax({
                    url: opts.url,
                    type: requestType,
                    dataType: apiDataType,
                    data: requestType,
                    jsonpCallback: jsonpCallback,
                    success: function(data) {
                        $.fn.areaSelect.init(_this, opts, data.result);
                    },
                    error: function(e) {
                        console.error("ajax error");
                    }
                })
            } else {
                $.fn.areaSelect.init(_this, opts, $.parseJSON(opts.url));
            }
        });
    }


    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    初始化，绑定数据，绑定事件
    1.$container:select容器
    2.opt:配置信息
    3.data:数据源
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.areaSelect.init = function($container, opts, data) {
        var $prov = $container.find("select.prov"); //省
        var $city = $container.find("select.city"); //城市
        var $dist = $container.find("select.dist"); //地区(县)
        var select_prehtml = (opts.required) ? "" : "<option value=''>请选择</option>";


        $prov.append($(select_prehtml));
        $city.append($(select_prehtml));
        $dist.append($(select_prehtml));

        //遍历赋值省份下拉列表
        $.each(data.areaList, function(i, prov) {
            var keys = Object.keys(prov);
            var $tmp = $("<option></option>").data("options", prov[keys[1]])
                .attr("data-name", prov[keys[0]])
                .val(keys[0])
                .html(prov[keys[0]]);
            $tmp.appendTo($prov);
        })


        //如存在默认省
        if (opts.prov != null) {
            var $tmp_prov = $prov.find("option[data-name='" + opts.prov + "']");
            if ($tmp_prov != null) {
                $prov.val($tmp_prov.val());
                $.fn.areaSelect.cityStart($prov, $city, $dist, opts);
            }
            if (opts.city != null) {
                var $tmp_city = $city.find("option[data-name='" + opts.city + "']");
                if ($tmp_city != null) {
                    $city.val($tmp_city.val());
                    $.fn.areaSelect.distStart($city, $dist, opts);
                }

                if (opts.dist != null) {
                    var tmp_dist = $dist.find("option[data-name='" + opts.dist + "']");
                    if (tmp_dist != null) {
                        $dist.val(tmp_dist.val());
                    }
                }
            }
        }

        //绑定chang事件
        $prov.on("change", function() {
            $.fn.areaSelect.cityStart($prov, $city, $dist, opts);
        });

        $city.on("change", function() {
            $.fn.areaSelect.distStart($city, $dist, opts);
        });
    }


    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    设置省份和城市
    1. $prov:省Select
    2. $city:市Select
    3. $dist:地区Select
    4. opts:配置项信息
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.areaSelect.cityStart = function($prov, $city, $dist, opts) {
        var tmp_html = (opts.required) ? "" : "<option value=''>请选择</option>";
        var options = $prov.find("option[value='" + $prov.val() + "']").data("options");

        $city.empty().html(tmp_html);
        $dist.empty().html(tmp_html);

        if (options == undefined || options === "") {
            if (opts.nodata == "none") {
                $city.css("display", "none");
                $dist.css("display", "none");
            }
            return;
        }

        $.each(options, function(i, city) {
            var keys = Object.keys(city);
            var $tmp = $("<option></option>").data("options", city[keys[1]])
                .attr("data-name", city[keys[0]])
                .val(keys[0])
                .html(city[keys[0]]);
            $tmp.appendTo($city);
        });

        $city.css({
            "display": ""
        });

        $.fn.areaSelect.distStart($city, $dist, opts);
    }

    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    设置地区(县)
    1. $city:城市Select
    2. $dist:地区Select
    3. data:地区数据
    4. opts:配置项
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.areaSelect.distStart = function($city, $dist, opts) {
        var tmp_html = (opts.required) ? "" : "<option value=''>请选择</option>";
        var options = $city.find("option[value='" + $city.val() + "']").data("options");

        $dist.empty().html(tmp_html);

        if (options == undefined || options === "") {
            if (opts.nodata == "none") {
                $dist.css("display", "none");
            }
            return;
        }

        $.each(options, function(i, dist) {
            var keys = Object.keys(dist);
            var $tmp = $("<option></option>").attr("data-name", dist[keys[0]])
                .val(keys[0])
                .html(dist[keys[0]]);
            $tmp.appendTo($dist);
        });

        $dist.css({
            "display": ""
        });
    }

    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    areaselect 插件默认配置
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.areaSelect.defaults = {
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        区域数据json文件路径,同时也可以扩展为支持json数据格式
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        url: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        默认省
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        prov: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        默认城市
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        city: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        默认地区(县)
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        dist: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        无数据状态，默认为null。nodata="none" 表示当子集无数据时，隐藏子集select,
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        nodata: null,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        必选项,默认为false。 当为true表示是否切换数据时是否默认显示子集的第一项
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        required: false,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        接口是否跨域，这直接决定了接口的返回格式是json还是jsonp。默认为false
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        crossDomain: false,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        请求类型，可以是：GET | POST，如果crossDomain="jsonp"，那请求肯定是GET类型
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        requestType: 'GET',
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        如若是jsonp 请求，可以指定callBackFunction Name，默认为callBack
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        jsonpCallback: "callBack"
    }
})(jQuery)
